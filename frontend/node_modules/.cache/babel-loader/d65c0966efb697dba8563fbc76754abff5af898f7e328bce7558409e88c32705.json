{"ast":null,"code":"export const formatDate = date => {\n  if (!date) return \"\";\n  return date.format(\"MMMM D, \");\n};\nexport const formatDay = date => {\n  if (!date) return \"\";\n  return date.format(\" dddd\");\n};\nexport const formatTime = time => {\n  const [hours, minutes] = time.split(':');\n  let period = 'AM';\n  let formattedHours = parseInt(hours, 10);\n  if (formattedHours >= 12) {\n    period = 'PM';\n    if (formattedHours > 12) {\n      formattedHours -= 12;\n    }\n  }\n  const formattedHoursString = formattedHours.toString().padStart(2, '0');\n  const formattedMinutes = minutes.padStart(2, '0');\n  return `${formattedHoursString}:${formattedMinutes} ${period}`;\n};\nexport const formatDateToISO = date => {\n  return date.format('YYYY-MM-DD');\n};\nexport const formatTimeTo24Hours = time => {\n  return time.format('HH:mm:ss');\n};","map":{"version":3,"names":["formatDate","date","format","formatDay","formatTime","time","hours","minutes","split","period","formattedHours","parseInt","formattedHoursString","toString","padStart","formattedMinutes","formatDateToISO","formatTimeTo24Hours"],"sources":["/home/divum/Desktop/Meetingroom/MRB Kowsalaya/room-finder-frontend/src/utils/function/index.tsx"],"sourcesContent":["import  { Dayjs } from \"dayjs\";\n\nexport const formatDate = (date: Dayjs | null) => {\n  if (!date) return \"\";\n  return date.format(\"MMMM D, \");\n};\n\nexport const formatDay = (date: Dayjs | null) => {\n  if (!date) return \"\";\n  return date.format(\" dddd\");\n};\n\nexport const formatTime = (time: string) => {\n  const [hours, minutes] = time.split(':');\n  let period: string = 'AM';\n  let formattedHours: number = parseInt(hours, 10);\n  if (formattedHours >= 12) {\n    period = 'PM';\n    if (formattedHours > 12) {\n      formattedHours -= 12;\n    }\n  }\n\n  const formattedHoursString: string = formattedHours.toString().padStart(2, '0');\n  const formattedMinutes: string = minutes.padStart(2, '0'); \n  return `${formattedHoursString}:${formattedMinutes} ${period}`;\n}\n\nexport const formatDateToISO = (date: Dayjs): string => {\n  return date.format('YYYY-MM-DD');\n};\n\nexport const formatTimeTo24Hours = (time: Dayjs): string => {\n  return time.format('HH:mm:ss');\n};"],"mappings":"AAEA,OAAO,MAAMA,UAAU,GAAIC,IAAkB,IAAK;EAChD,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;EACpB,OAAOA,IAAI,CAACC,MAAM,CAAC,UAAU,CAAC;AAChC,CAAC;AAED,OAAO,MAAMC,SAAS,GAAIF,IAAkB,IAAK;EAC/C,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;EACpB,OAAOA,IAAI,CAACC,MAAM,CAAC,OAAO,CAAC;AAC7B,CAAC;AAED,OAAO,MAAME,UAAU,GAAIC,IAAY,IAAK;EAC1C,MAAM,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;EACxC,IAAIC,MAAc,GAAG,IAAI;EACzB,IAAIC,cAAsB,GAAGC,QAAQ,CAACL,KAAK,EAAE,EAAE,CAAC;EAChD,IAAII,cAAc,IAAI,EAAE,EAAE;IACxBD,MAAM,GAAG,IAAI;IACb,IAAIC,cAAc,GAAG,EAAE,EAAE;MACvBA,cAAc,IAAI,EAAE;IACtB;EACF;EAEA,MAAME,oBAA4B,GAAGF,cAAc,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC/E,MAAMC,gBAAwB,GAAGR,OAAO,CAACO,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACzD,OAAQ,GAAEF,oBAAqB,IAAGG,gBAAiB,IAAGN,MAAO,EAAC;AAChE,CAAC;AAED,OAAO,MAAMO,eAAe,GAAIf,IAAW,IAAa;EACtD,OAAOA,IAAI,CAACC,MAAM,CAAC,YAAY,CAAC;AAClC,CAAC;AAED,OAAO,MAAMe,mBAAmB,GAAIZ,IAAW,IAAa;EAC1D,OAAOA,IAAI,CAACH,MAAM,CAAC,UAAU,CAAC;AAChC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}