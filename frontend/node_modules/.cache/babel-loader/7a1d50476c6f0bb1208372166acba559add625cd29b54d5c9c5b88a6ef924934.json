{"ast":null,"code":"var _jsxFileName = \"/home/divum/Downloads/room-finder-frontend/src/models/availableslot/index.tsx\",\n  _s = $RefreshSig$();\nimport { Modal } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { AttendeesModelinbookformpage, Loadingstyle } from '../../style/cssproperties';\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AvailableSlot = ({\n  setOpenSlot,\n  OpenSlot,\n  name,\n  availableSlotdata,\n  loading\n}) => {\n  _s();\n  const [freeSlot, setFreeSlot] = useState([]);\n  const officeStartTime = '12:00 am';\n  const officeEndTime = '11:59 pm';\n  function convertTimeToMinutes(time) {\n    const [hourStr, minuteStr] = time.split(\":\");\n    const hour = parseInt(hourStr, 10);\n    const minute = parseInt(minuteStr, 10);\n    if (time.toLowerCase().includes(\"pm\") && hour !== 12) {\n      return (hour + 12) * 60 + minute;\n    } else if (time.toLowerCase().includes(\"am\") && hour === 12) {\n      return minute;\n    } else {\n      return hour * 60 + minute;\n    }\n  }\n  function convertMinutesToTime(minutes) {\n    const hours = Math.floor(minutes / 60) % 12 || 12;\n    const ampm = minutes >= 720 ? \"pm\" : \"am\";\n    const remainingMinutes = minutes % 60;\n    return `${hours.toString().padStart(2, \"0\")}:${remainingMinutes.toString().padStart(2, \"0\")} ${ampm}`;\n  }\n  function findFreeSlots(startTime, endTime, meetings) {\n    const startMinutes = convertTimeToMinutes(startTime);\n    const endMinutes = convertTimeToMinutes(endTime);\n    meetings.sort((a, b) => convertTimeToMinutes(a.startTime) - convertTimeToMinutes(b.startTime));\n    const slots = [];\n    let currentEndTime = startMinutes;\n    for (const meeting of meetings) {\n      const meetingStart = convertTimeToMinutes(meeting.startTime);\n      const meetingEnd = convertTimeToMinutes(meeting.endTime);\n      if (meetingStart > currentEndTime) {\n        slots.push({\n          startTime: convertMinutesToTime(currentEndTime),\n          endTime: convertMinutesToTime(meetingStart),\n          status: \"Available\"\n        });\n      }\n      slots.push({\n        startTime: meeting.startTime,\n        endTime: meeting.endTime,\n        status: `Unavailable|${meeting.meetingName}|${meeting.hostName}`\n      });\n      currentEndTime = Math.max(currentEndTime, meetingEnd);\n    }\n    if (currentEndTime < endMinutes) {\n      slots.push({\n        startTime: convertMinutesToTime(currentEndTime),\n        endTime: convertMinutesToTime(endMinutes),\n        status: \"Available\"\n      });\n    }\n    return slots;\n  }\n  useEffect(() => {\n    const slots = findFreeSlots(officeStartTime, officeEndTime, availableSlotdata);\n    setFreeSlot(slots);\n    // eslint-disable-next-line\n  }, [availableSlotdata]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    footer: null,\n    centered: true,\n    open: OpenSlot,\n    onOk: () => setOpenSlot(false),\n    onCancel: () => setOpenSlot(false),\n    width: 800,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: loading ? Loadingstyle : AttendeesModelinbookformpage,\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loadingavailable\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"loadingsection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"roomname\",\n          children: [\"Meeting \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"Table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"From\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"To\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Availability\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: freeSlot.map((slot, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: slot.status.startsWith('Unavailable') ? 'unavailable' : 'available',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: slot.startTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: slot.endTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: slot.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 27\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n};\n_s(AvailableSlot, \"5wC8R/O8tu+1h+mtmfpBvspf8ug=\");\n_c = AvailableSlot;\nexport default AvailableSlot;\nvar _c;\n$RefreshReg$(_c, \"AvailableSlot\");","map":{"version":3,"names":["Modal","useEffect","useState","AttendeesModelinbookformpage","Loadingstyle","jsxDEV","_jsxDEV","Fragment","_Fragment","AvailableSlot","setOpenSlot","OpenSlot","name","availableSlotdata","loading","_s","freeSlot","setFreeSlot","officeStartTime","officeEndTime","convertTimeToMinutes","time","hourStr","minuteStr","split","hour","parseInt","minute","toLowerCase","includes","convertMinutesToTime","minutes","hours","Math","floor","ampm","remainingMinutes","toString","padStart","findFreeSlots","startTime","endTime","meetings","startMinutes","endMinutes","sort","a","b","slots","currentEndTime","meeting","meetingStart","meetingEnd","push","status","meetingName","hostName","max","footer","centered","open","onOk","onCancel","width","children","style","className","fileName","_jsxFileName","lineNumber","columnNumber","map","slot","index","startsWith","_c","$RefreshReg$"],"sources":["/home/divum/Downloads/room-finder-frontend/src/models/availableslot/index.tsx"],"sourcesContent":["import { Modal } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { Blockroomdata,AvailableSlotCardtype,freeSlot } from '../../type';\nimport {AttendeesModelinbookformpage,Loadingstyle } from '../../style/cssproperties'\nimport './index.scss';\n\nconst AvailableSlot = ({ setOpenSlot, OpenSlot, name,availableSlotdata,loading }: AvailableSlotCardtype) => {\n\n  const [freeSlot, setFreeSlot] = useState<freeSlot[]>([]);\n  const officeStartTime = '12:00 am';\n  const officeEndTime = '11:59 pm';\n\nfunction convertTimeToMinutes(time: string): number {\n    const [hourStr, minuteStr] = time.split(\":\");\n    const hour = parseInt(hourStr, 10);\n    const minute = parseInt(minuteStr, 10);\n\n    if (time.toLowerCase().includes(\"pm\") && hour !== 12) {\n        return (hour + 12) * 60 + minute;\n    } else if (time.toLowerCase().includes(\"am\") && hour === 12) {\n        return minute;\n    } else {\n        return hour * 60 + minute;\n    }\n}\n\nfunction convertMinutesToTime(minutes: number): string {\n    const hours = Math.floor(minutes / 60) % 12 || 12;\n    const ampm = minutes >= 720 ? \"pm\" : \"am\";\n    const remainingMinutes = minutes % 60;\n    return `${hours.toString().padStart(2, \"0\")}:${remainingMinutes.toString().padStart(2, \"0\")} ${ampm}`;\n}\n\nfunction findFreeSlots(startTime: string, endTime: string, meetings: Blockroomdata[]): freeSlot[] {\n    const startMinutes = convertTimeToMinutes(startTime);\n    const endMinutes = convertTimeToMinutes(endTime);\n\n    meetings.sort((a, b) => convertTimeToMinutes(a.startTime) - convertTimeToMinutes(b.startTime));\n\n    const slots: freeSlot[] = [];\n    let currentEndTime = startMinutes;\n\n    for (const meeting of meetings) {\n        const meetingStart = convertTimeToMinutes(meeting.startTime);\n        const meetingEnd = convertTimeToMinutes(meeting.endTime);\n\n        if (meetingStart > currentEndTime) {\n            slots.push({ startTime: convertMinutesToTime(currentEndTime), endTime: convertMinutesToTime(meetingStart), status: \"Available\" });\n        }\n\n        slots.push({ startTime: meeting.startTime, endTime: meeting.endTime, status: `Unavailable|${meeting.meetingName}|${meeting.hostName}` });\n\n        currentEndTime = Math.max(currentEndTime, meetingEnd);\n    }\n\n    if (currentEndTime < endMinutes) {\n        slots.push({ startTime: convertMinutesToTime(currentEndTime), endTime: convertMinutesToTime(endMinutes), status: \"Available\" });\n    }\n\n    return slots;\n}\n\n\n  useEffect(() => {\n    const slots = findFreeSlots(officeStartTime, officeEndTime, availableSlotdata);\n    setFreeSlot(slots);\n      // eslint-disable-next-line\n}, [availableSlotdata]); \n\n  return (\n      <Modal\n        footer={null}\n        centered\n        open={OpenSlot}\n        onOk={() => setOpenSlot(false)}\n        onCancel={() => setOpenSlot(false)}\n        width={800}\n      > \n           <div style={loading?Loadingstyle:AttendeesModelinbookformpage}>\n            {loading? \n                  <div className='loadingavailable'>\n                           <section className='loadingsection'></section>\n                     </div>:\n            <>\n            <h1 className='roomname'>Meeting {name}</h1>\n            <table className=\"Table\">\n                <thead>\n                    <tr>\n                        <th>From</th>\n                        <th>To</th>\n                        <th>Availability</th>\n                    </tr>\n                </thead>\n                <tbody>\n                \n                    {\n                      freeSlot.map((slot,index)=>(\n                        <tr key={index} \n                         className={slot.status.startsWith('Unavailable') ? 'unavailable' : 'available'}>\n                          <td>{slot.startTime}</td>\n                          <td>{slot.endTime}</td>\n                          <td>{slot.status}</td>\n                        </tr>\n                      ))   \n                    }\n                </tbody>\n            </table>\n            </>\n            }\n        </div>\n      </Modal>\n   \n  );\n};\n\nexport default AvailableSlot;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}